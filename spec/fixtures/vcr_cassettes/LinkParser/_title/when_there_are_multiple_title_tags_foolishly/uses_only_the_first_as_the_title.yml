---
http_interactions:
- request:
    method: get
    uri: https://babeljs.io/docs/usage/polyfill/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Cache-Control:
      - public, max-age=0, must-revalidate
      Content-Length:
      - '40'
      Content-Type:
      - text/plain; charset=utf-8
      Date:
      - Sat, 15 Aug 2020 16:03:17 GMT
      Location:
      - "/docs/en/babel-polyfill/"
      Age:
      - '332785'
      Connection:
      - keep-alive
      Server:
      - Netlify
      X-Nf-Request-Id:
      - 7830ad66-7628-4e29-906b-369828223b43-394520
    body:
      encoding: UTF-8
      string: 'Redirecting to /docs/en/babel-polyfill/

        '
  recorded_at: Wed, 19 Aug 2020 12:29:42 GMT
- request:
    method: get
    uri: https://babeljs.io/docs/en/babel-polyfill/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - public, max-age=0, must-revalidate
      Content-Type:
      - text/html; charset=UTF-8
      Date:
      - Sat, 15 Aug 2020 16:03:17 GMT
      Etag:
      - '"f724e0cc10ddb0085befff426c7acc52-ssl-df"'
      Strict-Transport-Security:
      - max-age=31536000
      Content-Length:
      - '6150'
      Age:
      - '332785'
      Connection:
      - keep-alive
      Server:
      - Netlify
      Vary:
      - Accept-Encoding
      X-Nf-Request-Id:
      - 7830ad66-7628-4e29-906b-369828223b43-394558
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 19 Aug 2020 12:29:42 GMT
recorded_with: VCR 6.0.0
