---
http_interactions:
- request:
    method: get
    uri: https://codingitwrong.com/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.10.3 (Ubuntu)
      Date:
      - Wed, 19 Aug 2020 12:32:07 GMT
      Content-Type:
      - text/html; charset=utf-8
      Last-Modified:
      - Mon, 17 Aug 2020 13:56:23 GMT
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Etag:
      - W/"5f3a8c87-6e47"
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 19 Aug 2020 12:32:07 GMT
recorded_with: VCR 6.0.0
